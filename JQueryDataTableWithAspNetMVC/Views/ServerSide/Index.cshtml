@{
    ViewBag.Title = "Server Side";
}



<style>
    .dataTables_filter {
        display: none;
    }

    .actions input {
        visibility: hidden;
        pointer-events: none;
    }
</style>
<div class="col-md-12">
    <h3>List | Employee</h3>
    @Html.ActionLink("Create", "Create", "ServerSide", null, new { @class = "btn btn-default" })
    <hr />
</div>

<div class="col-md-12">
    <table id="myTable" class="table table-hover table-striped table-bordered" cellspacing="0">
        <thead>
            <tr>
                <th>Employee Name</th>
                <th>Department</th>
                <th>Age</th>
                <th>Gender</th>
                <th>CreatedOn</th>
                <th class="actions">Actions</th>
            </tr>
            <tr>
                <th>Employee Name</th>
                <th>Department</th>
                <th>Age</th>
                <th>Gender</th>
                <th>CreatedOn</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <th>Employee Name</th>
                <th>Department</th>
                <th>Age</th>
                <th>Gender</th>
                <th>CreatedOn</th>
                <th>Actions</th>
            </tr>
        </tfoot>
    </table>
</div>

@section Scripts{
    <script>

        $(document).ready(function () {

            // Setup - add a text input to each header cell
            $('#myTable thead tr:eq(0) th').each(function () {
                var title = $(this).text();
                $(this).html('<input type="text" placeholder="Search ' + title + '" />');
            });

            //Initialize the datatable

            var table = $('#myTable').DataTable({
                "processing": true,
                "serverSide": true,
                //"filter": false,
                //"orderMulti": false,
                "ajax": {
                    "url": "/ServerSide/LoadData",
                    "type": "POST",
                    "datatype": "json"
                },
                
                "columns": [
                    {
                        "data": "EmployeeName", "name": "EmployeeName",
                        "autoWidth": true,
                        "render": function (data, type, row, meta) {
                            return '<a href="/ServerSide/Details/' + row.EmployeeId + '">' + data + '</a>';
                        }
                    },
                    { "data": "Department.DepartmentName", "name": "DepartmentName", "autoWidth": true },
                    { "data": "Age", "name": "Age", "autoWidth": true },
                    { "data": "Gender", "name": "Gender", "autoWidth": true },
                    {
                        "data": "CreatedOn", "name": "CreatedOn",
                        "autoWidth": true,
                        "render": function (data) {
                            var dateString = data.substr(6);
                            var currentTime = new Date(parseInt(dateString));
                            var month = currentTime.getMonth() + 1;
                            var day = currentTime.getDate();
                            var year = currentTime.getFullYear();
                            var hour = currentTime.getHours();
                            var minute = currentTime.getMinutes();
                            var seconds = currentTime.getSeconds();

                            var localStandarHour = hour > 12 ? hour - 12 : hour;

                            var time = (localStandarHour.toString().length > 1 ? localStandarHour : "0" + localStandarHour) + ":" + (minute.toString().length > 1 ? minute : "0" + minute) + ":"
                                + (seconds.toString().length > 1 ? seconds : "0" + seconds);


                            if (hour > 12) {
                                time = time + " PM";
                            } else {
                                time = time + " AM";
                            }


                            return (day.toString().length > 1 ? day : "0" + day) +
                                "/" +
                                (month.toString().length > 1 ? month : "0" + month) +
                                "/" +
                                year + " " + time;

                        }


                    },
                    {
                        "data": "EmployeeId", "name": "EmployeeId",
                        "bSearchable": false,
                        "bSortable": false,
                        "render": function (data, type, row, meta) {

                            return '<a href="/ServerSide/Details/' + row.EmployeeId + '">Details</a>' + ' | ' +
                                '<a href="/ServerSide/Edit/' + row.EmployeeId + '">Edit</a>' + ' | ' +
                                '<a href="/ServerSide/Delete/' + row.EmployeeId + '">Delete</a>';
                        }
                    }
                ]
            });


            table.columns().every(function (index) {
                $('#myTable thead tr:eq(0) th:eq(' + index + ') input').on('focusout', function () {
                    table.column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                });
            });

        });
    </script>
}

@*<td>
        @Html.ActionLink("Edit", "Edit", new { id=item.EmployeeId }) |
        @Html.ActionLink("Details", "Details", new { id=item.EmployeeId }) |
        @Html.ActionLink("Delete", "Delete", new { id=item.EmployeeId })
    </td>*@
